# https://github.com/PaulHatch/semantic-version
name: test for semantic-version
on:
  # trigger for merging PR
  push:
jobs:
  use-semantic-version:
    runs-on: Ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

    # Create next semantic version using 3rd party action https://github.com/PaulHatch/semantic-version
    # If commit messages contain "major", "refactor", or "perf" keywords, it will bump the major version
    # If commit messages contain "minor", "feat", it will bump the minor version
    # If commit messages does not contain above keywords, for example, fix, it will bump the patch version
      - name: Use Semantic Version
        id: sver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          major_pattern: "/^(refactor|perf|BREAKING CHANGE):.*$/"
          minor_pattern: "/^(feat):.*$/"
          version_format: "${major}.${minor}.${patch}"
          search_commit_body: true
          debug: true

      - name: Print return values
        run: |
          echo "Version: ${{ steps.sver.outputs.version }}"
          echo "Version tag: ${{ steps.sver.outputs.version_tag }}"
          echo "Version type: ${{ steps.sver.outputs.version_type }}"
          echo "Is Tagged: ${{ steps.sver.outputs.is_tagged }}"
          echo "Major version: ${{ steps.sver.outputs.major }}"
          echo "Minor version: ${{ steps.sver.outputs.minor }}"
          echo "Patch version: ${{ steps.sver.outputs.patch }}"
          echo "current_commit: ${{ steps.sver.outputs.current_commit }}"
          echo "previous_commit: ${{ steps.sver.outputs.previous_commit }}"
      - name: Print Commit msg
        run: |
          echo ${{ github.event.head_commit.message }}
      # - name: Create tag
      #   uses: actions/github-script@v7.0.1
      #   with:
      #     script: |
      #       github.rest.git.createRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: "refs/tags/${{ env.TAGNAME }}",
      #         sha: context.sha
      #         })
      #   env: 
      #     TAGNAME: ${{ steps.sver.outputs.version }}
      # - name: Get current date
      #   id: date
      #   run: echo "::set-output name=date::$(date +'%Y-%m-%d')"